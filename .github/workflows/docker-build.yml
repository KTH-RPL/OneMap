name: Docker Build
on:
  push:
    branches: [ main, devel ]
  pull_request:
    branches: [ main, devel ]
jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
         
    - name: Configure Docker to use extra disk space
      run: |
        echo "Disk space before reconfiguration:"
        df -h
        
        # Stop Docker service
        sudo systemctl stop docker
        
        # Create new Docker data directory on the secondary disk
        sudo mkdir -p /mnt/docker
        
        # Configure Docker to use the new location
        echo '{
          "data-root": "/mnt/docker"
        }' | sudo tee /etc/docker/daemon.json
        
        # Restart Docker service
        sudo systemctl start docker
        sudo systemctl status docker
        
        echo "Disk space after reconfiguration:"
        df -h
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Print Docker and Docker Compose versions
      run: |
        echo "Docker version:"
        docker --version
        echo "Docker Compose version:"
        docker compose version
        echo "System info:"
        uname -a
        
    - name: Free up disk space
      run: |
        echo "Disk space before cleanup:"
        df -h
        # Remove unnecessary large packages
        # sudo rm -rf /usr/share/dotnet
        # sudo rm -rf /usr/local/lib/android
        # sudo rm -rf /opt/ghc
        # sudo rm -rf /opt/hostedtoolcache
        # sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        # sudo apt-get autoremove -y
        # sudo apt-get clean
        echo "Disk space after cleanup:"
        df -h   
        
    - name: List files in directory
      run: |
        echo "Repository contents:"
        ls -la
        echo "Docker-related files:"
        find . -name "Dockerfile" -o -name "docker-compose.yml" -o -name "docker-compose.yaml"
      
    - name: Build with Docker Compose
      run: |
        # Create a temporary directory on the secondary disk for any build artifacts
        sudo mkdir -p /mnt/build-tmp
        sudo chown $USER:$USER /mnt/build-tmp
        
        echo "Starting Docker Compose build..."
        # Use DOCKER_BUILDKIT=1 for more efficient builds
        DOCKER_BUILDKIT=1 docker compose build --progress=plain
        echo "Docker Compose build completed successfully!"
        
    - name: List built images
      run: |
        echo "Built Docker images:"
        docker images
        echo "Disk usage:"
        df -h
